const express = require("express");
const router = express.Router();
const { distributeMotifs } = require("../utils/distribution");
const { getMissingSlots } = require("../delta-tracker");
const { buildCalendarMap, fetchMotivesBetween ,fetchCalendocSlotsWithMotifs} = require("../utils/fetchCalendocHistory");
const { logMotifSummaryPerMonth } = require("../utils/stats");


router.post("/", async (req, res) => {
  console.log("üì• Requ√™te re√ßue sur /distribute");
  try {
    const ratios = { BSC: 0.6, SNC: 0.2, UNL: 0.2 };
    const dryRun = req.query.dryRun === "true";
    console.log("üîß dryRun mode:", dryRun);

    const missing = await getMissingSlots();
    console.log("üìã Cr√©neaux manquants :", missing.length);

    const calendarMap = await buildCalendarMap();
    const calendarIds = calendarMap.ALL; // ‚úÖ ici tu extrais les IDs globaux

    const result = await distributeMotifs(
      missing,
      async () => (await buildCalendarMap()).ALL,
      ratios,
      dryRun
    );
    console.log("‚úÖ Motifs distribu√©s :", result.length);

    // R√©cup√®re aussi les slots Calendoc ouverts
    const allSlots = result.concat(
      await fetchCalendocSlotsWithMotifs(new Date(2025, 5, 1), new Date(2025, 7, 1), calendarIds)
    );

    logMotifSummaryPerMonth(allSlots);

    res.json({ success: true, message: "Distribute POST OK" });
  } catch (err) {
    console.error("‚ùå Erreur distribution :", err);
    res.status(500).json({ success: false, message: err.message });
  }
});

module.exports = router;